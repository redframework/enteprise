<?php

use Red\EnvironmentProvider\Environment;


        /*
        |--------------------------------------------------------------------------
        | session.gc_maxlifetime
        |--------------------------------------------------------------------------
        |
        | Life Time of Sessions (Second)
        | Default is 30 Minutes
        |
        */

        ini_set('session.gc_maxlifetime', '1800');


        /*
        |--------------------------------------------------------------------------
        | session.gc_probability
        |--------------------------------------------------------------------------
        |
        | Probability of Running Session Garbage Cleaner
        | Be Careful With this Value; Running GC in Every Requested Web Page Will Slow Down the Process !
        |
        */

        ini_set('session.gc_probability', '1');


        /*
        |--------------------------------------------------------------------------
        | session.gc_divisor
        |--------------------------------------------------------------------------
        |
        | GC Probability Will be Division on Divisor
        | For Example: 50 / 100 . There is 50/50 Chance to Run GC Cleaner
        | Be Careful With this Value; Running GC in Every Requested Web Page Will Slow Down the Process !
        |
        */

        ini_set('session.gc_divisor', '100');


        /*
        |--------------------------------------------------------------------------
        | session.use_strict_mod
        |--------------------------------------------------------------------------
        |
        | Strict Mode is For Secure Sessions
        | if Set Value is On: session module only accepts valid session IDs generated by the session module.
        | It rejects any session ID supplied by users.
        |
        */

        ini_set('session.use_strict_mode', 'On');


        /*
        |--------------------------------------------------------------------------
        | session.use_only_cookies
        |--------------------------------------------------------------------------
        |
        | Session Will Store Session ID at Cookie Only
        |
        */

        ini_set('session.use_only_cookies', 'On');


        /*
        |--------------------------------------------------------------------------
        | session.cookie_lifetime
        |--------------------------------------------------------------------------
        |
        | Session Cookie Life Time
        | 0 Value Means After Next Browser Restart Cookie Will be Ended
        | Be Careful with this Value, Setting any Value except 0 is a Life time For All Sessions !
        | Even if User is Active, Session Cookie of That user will Be ended after Life time;
        | Without Session Cookie User is Not Available to Get Access to Session.
        |
        */

        ini_set('session.cookie_lifetime', '0');


        /*
        |--------------------------------------------------------------------------
        | session.cookie_httponly
        |--------------------------------------------------------------------------
        |
        | Refuses access to the session cookie from JavaScript. This setting prevents cookies snatched by
        | a JavaScript injection.
        |
        */

        ini_set('session.cookie_httponly', 'On');


        /*
        |--------------------------------------------------------------------------
        | session.cookie_samesite
        |--------------------------------------------------------------------------
        |
        | Allows servers to assert that a cookie ought not to be sent along with cross-site requests.
        | Turning this Option Strict provides some protection against cross-site request forgery attacks.
        |
        */

        ini_set('session.cookie_samesite', 'Strict');


        /*
        |--------------------------------------------------------------------------
        | session.use_trans_sid
        |--------------------------------------------------------------------------
        |
        | Setting This Value Off will Prevent Session ID Injection
        | and Will Improve Session General Security
        |
        */

        ini_set('session.use_trans_sid', 'Off');


        /*
        |--------------------------------------------------------------------------
        | session.cache_limiter
        |--------------------------------------------------------------------------
        |
        | Ensure HTTP content are uncached for authenticated sessions. Allow caching only when the content is not private.
        |
        */

        ini_set('session.cache_limiter', 'nocache');


        /*
        |--------------------------------------------------------------------------
        | session.sid_length
        |--------------------------------------------------------------------------
        |
        | Longer session IDs results in stronger session IDs.
        |
        */

        ini_set('session.sid_length', '200');


        /*
        |--------------------------------------------------------------------------
        | session.sid_bits_per_character
        |--------------------------------------------------------------------------
        |
        | The more bits there are in a session ID character,
        | the stronger the session ID generated by the session module is for an identical session ID length.
        |
        */

        ini_set('session.sid_bits_per_character', '6');


        /*
        |--------------------------------------------------------------------------
        | session.hash_function
        |--------------------------------------------------------------------------
        |
        | A stronger hash function will generate a stronger session ID.
        |
        */

        ini_set('session.hash_function', 'sha256');




        if (isset($_SERVER['HTTPS'])) {


            /*
            |--------------------------------------------------------------------------
            | session.cookie_secure
            |--------------------------------------------------------------------------
            |
            | Allow access to the session ID cookie only when the protocol is HTTPS.
            | If a website is only accessible via HTTPS, it should enable this setting.
            |
            */

            ini_set('session.cookie_secure', 'On');


            /*
            |--------------------------------------------------------------------------
            | session.referer_check
            |--------------------------------------------------------------------------
            |
            | When session.use_trans_sid is enabled. It reduces the risk of session ID injection.
            | If a website is http://example.com/, set http://example.com/ to it.
            | For HTTPS
            |
            */

            ini_set('session.referer_check', 'https://' . $_SERVER['HTTP_HOST'] . '/');
        } else {


            /*
            |--------------------------------------------------------------------------
            | session.referer_check
            |--------------------------------------------------------------------------
            |
            | When session.use_trans_sid is enabled. It reduces the risk of session ID injection.
            | If a website is http://example.com/, set http://example.com/ to it.
            | For HTTP
            |
            */

            ini_set('session.referer_check', 'http://' . $_SERVER['HTTP_HOST'] . '/');
        }


        /*
        |--------------------------------------------------------------------------
        | session.save_handler
        |--------------------------------------------------------------------------
        |
        | defines the name of the handler which is used for storing and retrieving data associated with a session.
        | Defaults to files.
        |
        */

        ini_set('session.save_handler', 'files');


        /*
        |--------------------------------------------------------------------------
        | session_name
        |--------------------------------------------------------------------------
        |
        | Name of 'Session id' Cookie.
        |
        */

        session_name(strtolower(Environment::get('PROJECT', 'Name') . '_session'));


        /*
        |--------------------------------------------------------------------------
        | save_path
        |--------------------------------------------------------------------------
        |
        | Path for Storing Session Cache.
        |
        */

        session_save_path(SESSION_PATH);